<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdpt.security.mapper.GoodMapper">

  <resultMap id="BaseResultMap" type="com.jdpt.security.api.model.Good">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="userpassword" jdbcType="VARCHAR" property="userpassword" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>

  <sql id="Base_Column_List">
    id, username, userpassword,phone
  </sql>

  <!--查询登录用户信息(首页登录判断用户登录信息)-->
  <select id="findLoginUser" resultMap="BaseResultMap" parameterType="com.jdpt.security.api.model.Good">
    select
    <include refid="Base_Column_List" />
    from good
    where username = #{username} and userpassword = #{userpassword}
  </select>

  <!--必要首页 登录验证 手机号和密码-->
  <select id="verifyCustomer" resultMap="BaseResultMap" parameterType="com.jdpt.security.api.model.Good">
    select
    <include refid="Base_Column_List" />
    from good
    where phone = #{phone} and userpassword = #{userpassword}
  </select>

  <!--注册页面验证手机号是否已经注册-->
  <select id="getCustomerByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from good
    where phone = #{phone}
  </select>

  <select id="verifyCustomerByPhoneAndPsw" parameterType="com.jdpt.security.api.model.Good" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from good
    where phone = #{phone} and userpassword = #{userpassword}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from good
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from good
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.jdpt.security.api.model.Good">
    insert into good (id, username, userpassword,phone)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="com.jdpt.security.api.model.Good">
    insert into good
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="userpassword != null">
      userpassword,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null">
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.jdpt.security.api.model.Good">
    update good
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null">
        userpassword = #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.jdpt.security.api.model.Good">
    update good
    set username = #{username,jdbcType=VARCHAR},
        userpassword = #{userpassword,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>